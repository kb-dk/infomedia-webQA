openapi: 3.0.2

info:
  version: "${project.version}"
  title: "${project.name}"
  description: |
    ${project.description}
  contact:
    email: "${user.name}@kb.dk"
  license:
    name: "${license.name}"
#    url: "${license.url}"

servers:
  #  /api must match servlet-mapping in web.xml
  - url: "/${project.artifactId}/api"
    description: "Current server"

paths:
  /file/:
    get:
      operationId: getTiffFile
      x-streamingOutput: true # If enabled the method will return StreamingOutput.
      parameters:
        - name: file
          in: query
          required: true
          schema:
            type: string
        - name: batchid
          in: query
          required: true
          schema:
            type: string


      responses:
        '200':
          description: A pdf with attached page
          content:
            image/pdf:
              schema:
                type: string
                format: binary

  /config.json:
    get:
      operationId: getConfig
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema: { }
  
  /newspaperIDs:
    get:
      operationId: getNewspaperIDs
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NewspaperID"
  #          content:
  #            application/json:
  #              schema:
  #                type: object
  #                additionalProperties:
  #                  type: boolean

  #          content:
  #            application/json:
  #              schema:
  #                type: object
  #                additionalProperties:
  #                  type: object
  #                  $ref: "#/components/schemas/NewspaperID"



  /batch:
    get:
      operationId: getBatches
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SlimBatch"



  /batch/{batchID}:
    get:
      operationId: getBatch
      parameters:
        - name: batchID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Batch"
    post:
      operationId: setState
      summary: ""
      parameters:
        - name: batchID
          in: path
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Batch updated

  /batches/{month}/{year}:
    get:
      operationId: getBatchForYearAndMonth
      parameters:
        - name: month
          in: path
          required: true
          schema:
            type: string
        - name: year
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SlimBatch"

  /batch/{batchID}/{year}:
    get:
      operationId: getBatchDatesForNewspaper
      parameters:
        - name: batchID
          in: path
          required: true
          schema:
            type: string
        - name: year
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewspaperDate'

  /batch/{batchID}/{newspaperID}/{date}:
    get:
      operationId: getNewspaperDay
      parameters:
        - name: batchID
          in: path
          required: true
          schema:
            type: string
        - name: newspaperID
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewspaperDay'


  /years/{newspaperID}:
    get:
      operationId: getYearsForNewspaper
      parameters:
        - name: newspaperID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string


  /dates/{newspaperID}/{year}:
    get:
      operationId: getDatesForNewspaperYear
      parameters:
        - name: newspaperID
          in: path
          required: true
          schema:
            type: string
        - name: year
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewspaperDate'

  /noEditionNoteCount/{newspaperID}/{batchID}/{date}:
    get:
      operationId: getNoteCount
      parameters:
        - name: newspaperID
          in: path
          required: true
          schema:
            type: string
        - name: batchID
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: integer


  /entity/{handle}/url/{type}:
    get:
      operationId: getEntityURL
      parameters:
        - name: handle
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: string
                format: uri

  /entity/{handle}/characterization}:
    get:
      operationId: getEntityCharacterization
      parameters:
        - name: handle
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharacterizationInfo'


  /notes/{batchID}:
    get:
      operationId: getNotes
      summary: ""
      parameters:
        - name: batchID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
    post:
      operationId: setNotes
      summary: ""
      parameters:
        - name: batchID
          in: path
          required: true
          schema:
            type: string
        - name: avis
          in: query
          required: false
          schema:
            type: string
        - name: date
          in: query
          required: true
          schema:
            type: string
            #format: date
        - name: edition
          in: query
          required: false
          schema:
            type: string
        - name: section
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: string

      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '201':
          description: Created
    delete:
      operationId: removeNote
      summary: ""
      parameters:
        - name: batchID
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Note deleted

  /{avisid}/notes:
    get:
      operationId: getNewspaperNotes
      summary: ""
      parameters:
        - name: avisid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
    post:
      operationId: setNewspaperNotes
      summary: ""
      parameters:
        - name: avisid
          in: path
          required: true
          schema:
            type: string
        - name: batchID
          in: query
          required: false
          schema:
            type: string
        - name: date
          in: query
          required: true
          schema:
            type: string
            #format: date
        - name: edition
          in: query
          required: false
          schema:
            type: string
        - name: section
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: string

      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '201':
          description: Created
    delete:
      operationId: removeNotes
      summary: ""
      parameters:
        - name: avisid
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Note deleted


components:
  schemas:

    NewspaperDate:
      type: object
      properties:
        batchid:
          type: string
        avisid:
          type: string
        roundtrip:
          type: integer
        date:
          type: string
          format: date
        pageCount:
          type: integer
        editionCount:
          type: integer
        notesCount:
          type: integer
        state:
          type: string
        problems:
          type: string




    Note:
      type: object
      properties:
        id:
          type: integer
        batchid:
          type: string
          nullable: true
        avisid:
          type: string
          nullable: true
        editionDate:
          type: string
          format: date
          nullable: true
        editionTitle:
          type: string
          nullable: true
        sectionTitle:
          type: string
          nullable: true
        pageNumber:
          type: integer
          nullable: true
        note:
          type: string
        username:
          type: string
        created:
          type: string
          format: date-time

    NewspaperID:
      description: "A Newspaper ID and bool:true if all batches are finished (i.e. approved or rejected)"
      type: object
      properties:
        isInactive:
          description: "True if all batches (for this avisID) is approved or rejected."
          type: boolean
        avisid:
          type: string
        deliveryDate:
          type: string
          format: date


    SlimBatch:
      type: object
      properties:
        batchid:
          type: string
        roundtrip:
          type: integer
        avisid:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        deliveryDate:
          type: string
          format: date
        numProblems:
          description: "Number of problems found. Use this to see if the batch completed checks without any errors"
          type: integer
        numNotes:
          type: integer
        state:
          type: string
        username:
          type: string
        lastModified:
          type: string
          format: 'date-time'
    
    Batch:
      allOf:
        - $ref: '#/components/schemas/SlimBatch'
        - type: object
          properties:
            problems:
              description: "Problems not associated with any page"
              type: string
              nullable: true
            notes:
              type: array
              items:
                $ref: '#/components/schemas/Note'
    
    NewspaperDay:
      type: object
      properties:
        batch:
          $ref: '#/components/schemas/SlimBatch'
        date:
          type: string
          format: date
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        editions:
          type: array
          items:
            $ref: '#/components/schemas/NewspaperEdition'

    NewspaperEdition:
      type: object
      properties:
        batchid:
          type: string
        avisid:
          type: string
        date:
          type: string
          format: date
        edition:
          type: string
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/NewspaperSection'

    NewspaperSection:
      type: object
      properties:
        batchid:
          type: string
        avisid:
          type: string
        date:
          type: string
          format: date
        edition:
          type: string
        section:
          type: string
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        pages:
          type: array
          items:
            $ref: '#/components/schemas/NewspaperPage'

    NewspaperPage:
      type: object
      properties:
        batchid:
          type: string
        origRelpath:
          type: string
        origFullPath:
          type: string
        formatType:
          type: string
        editionDate:
          type: string
          format: date
        singlePage:
          type: boolean
        pageNumber:
          type: integer
        avisid:
          type: string
        avistitle:
          type: string
        shadowPath:
          type: string
        sectionTitle:
          type: string
        editionTitle:
          type: string
        deliveryDate:
          type: string
          format: date
        handle:
          type: integer
          format: int64
        fraktur:
          type: boolean
        problems:
          type: string
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'



    CharacterizationInfo:
      type: object
      properties:
        origRelpath:
          type: string
        tool:
          type: string
        characterisationDate:
          type: string
          format: date
        toolOutput:
          type: string
        status:
          type: string
